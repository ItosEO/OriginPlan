
name: main

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'
      - '**.yml'


jobs:
  build:
    name: Build CI (Push)
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_BASEDIR: "${{ github.workspace }}"
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }} && success() && github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Setup cmake
        run: |
          echo "ANDROID_HOME=${ANDROID_HOME}"
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
          mkdir -p "$ANDROID_HOME/licenses/"
          echo > "$ANDROID_HOME/licenses/android-sdk-license"
          echo -n 24333f8a63b6825ea9c5514f83c2829b004d1fee > "$ANDROID_HOME/licenses/android-sdk-license"
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "cmake;3.22.1" --sdk_root=${ANDROID_SDK_ROOT}
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
      - name: Install ccache
        run: |
          sudo apt install -y ccache
          ccache -o max_size=1G
          ccache -o hash_dir=false
          ccache -o hard_link=true
          ccache -o compiler_check='%compiler% -dumpmachine; %compiler% -dumpversion'
          ccache -zp
      - name: Cache Native Build
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.cache/ccache
            ~/.ccache
            app/build/.lto-cache
          key: native-cache-${{ github.sha }}
          restore-keys: native-cache-

      - name: Setup Gradle
        # uses: gradle/gradle-build-action@v3.4.1
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          echo 'buildCache { local { removeUnusedEntriesAfterDays = 1 } }' >> settings.gradle.kts
          echo ${{ secrets.RELEASE_KEYSTORE_FILE }} | base64 -d > keystore.jks
          chmod +x ./gradlew
          ./gradlew assembleRelease
          ccache -s
          APK_FILE_PATH=$(find app/build/outputs/apk/release -name '*.apk')
          FILE_NAME=$(basename "$APK_FILE_PATH")
          echo "APK_FILE_PATH=$APK_FILE_PATH" >> $GITHUB_ENV
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV

      
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: Show Artifacts SHA256
        run: |
          echo "### Build Success :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "|File|SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|:--------:|:----------|" >> $GITHUB_STEP_SUMMARY
          arm32=($(sha256sum ${{ env.APK_FILE_ARM32 }}))
          echo "|${{ env.FILE_NAME}}|$arm32" >> $GITHUB_STEP_SUMMARY
          
      - name: Upload Artifacts(arm32)
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.APK_FILE_PATH }}
          name: ${{ env.FILE_NAME}}
